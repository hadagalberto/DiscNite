// <auto-generated />
using System;
using DiscNite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiscNite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240629184145_PUBG")]
    partial class PUBG
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiscNite.Models.DiscordServer", b =>
                {
                    b.Property<Guid>("IdDiscordServer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("IdDiscord")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("IdTextChannel")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDiscordServer");

                    b.ToTable("DiscordServer");
                });

            modelBuilder.Entity("DiscNite.Models.FortnitePlayer", b =>
                {
                    b.Property<Guid>("IdFortnitePlayer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdDiscord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdDiscordServer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerStatsJSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Vitorias")
                        .HasColumnType("bigint");

                    b.HasKey("IdFortnitePlayer");

                    b.HasIndex("IdDiscordServer");

                    b.ToTable("FortnitePlayer");
                });

            modelBuilder.Entity("DiscNite.Models.PUBGPlayer", b =>
                {
                    b.Property<Guid>("IdPUBGPlayer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdDiscord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdDiscordServer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerStatsJSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VitoriasDuo")
                        .HasColumnType("bigint");

                    b.Property<long>("VitoriasQuad")
                        .HasColumnType("bigint");

                    b.Property<long>("VitoriasSolo")
                        .HasColumnType("bigint");

                    b.HasKey("IdPUBGPlayer");

                    b.HasIndex("IdDiscordServer");

                    b.ToTable("PUBGPlayer");
                });

            modelBuilder.Entity("DiscNite.Models.FortnitePlayer", b =>
                {
                    b.HasOne("DiscNite.Models.DiscordServer", "DiscordServer")
                        .WithMany("FortnitePlayers")
                        .HasForeignKey("IdDiscordServer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscordServer");
                });

            modelBuilder.Entity("DiscNite.Models.PUBGPlayer", b =>
                {
                    b.HasOne("DiscNite.Models.DiscordServer", "DiscordServer")
                        .WithMany("PUBGPlayers")
                        .HasForeignKey("IdDiscordServer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscordServer");
                });

            modelBuilder.Entity("DiscNite.Models.DiscordServer", b =>
                {
                    b.Navigation("FortnitePlayers");

                    b.Navigation("PUBGPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
